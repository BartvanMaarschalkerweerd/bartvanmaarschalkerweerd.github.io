{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/actions.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/store.ts","webpack:///./src/app/todo-list/todo-list.component.css","webpack:///./src/app/todo-list/todo-list.component.html","webpack:///./src/app/todo-list/todo-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h1 class=\\\"card-title\\\">{{title}}</h1>\\n    <h5 class=\\\"card-subtitle\\\">Angular5 / Redux</h5>\\n    <br />\\n    <!--Laat de contents van app-todo-list zien-->\\n    <app-todo-list></app-todo-list>\\n    <h6>Bart van Maarschalkerweerd</h6>\\n  </div>\\n</div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TodoList';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgRedux, NgReduxModule } from '@angular-redux/store';\n\nimport { AppComponent } from './app.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\n\nimport { IAppState, rootReducer, INITIAL_STATE } from './store';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgReduxModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(ngRedux: NgRedux<IAppState>) {\n    ngRedux.configureStore(rootReducer, INITIAL_STATE);\n  }\n}\n","import { ITodo } from './todo';\r\nimport { ADD_TODO, TOGGLE_TODO, REMOVE_TODO} from './actions';\r\n\r\nexport interface IAppState {\r\n    todos: ITodo[];\r\n}\r\n\r\nexport const INITIAL_STATE: IAppState = {\r\n    todos: [],\r\n}\r\n\r\nexport function rootReducer(state: IAppState, action): IAppState {\r\n    switch (action.type) {\r\n        //Op Create\r\n        case ADD_TODO:\r\n            action.todo.id = state.todos.length + 1;    \r\n            return Object.assign({}, state, {\r\n                todos: state.todos.concat(Object.assign({}, action.todo))\r\n            })\r\n        \r\n        case TOGGLE_TODO:\r\n            var todo = state.todos.find(t => t.id === action.id);\r\n            var index = state.todos.indexOf(todo);\r\n            return Object.assign({}, state, {\r\n                todos: [\r\n                    state.todos.slice(0, index),\r\n                    Object.assign({}, todo, {isCompleted: !todo.isCompleted}),\r\n                    state.todos.slice(index+1)\r\n                ]\r\n            })\r\n        //Op Delete\r\n        case REMOVE_TODO:\r\n            return Object.assign({}, state, {\r\n                todos: state.todos.filter(t => t.id !== action.id)\r\n            })\r\n\r\n    }\r\n    return state;\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<h6>Create Todo:</h6>\\n<form (ngSubmit)=\\\"obSubmit()\\\" #todoForm=\\\"ngForm\\\">\\n  <div class=\\\"form\\\">\\n    <div class=\\\"col-auto\\\">\\n        <input \\n          type=\\\"text\\\" \\n          class=\\\"form-control\\\" \\n          placeholder=\\\"Description\\\"\\n          id=\\\"description\\\"\\n          [(ngModel)]=\\\"model.description\\\"\\n          name=\\\"description\\\"\\n          #description=\\\"ngModel\\\">\\n    </div>\\n\\n      <!--Als description niet is ingevult laat alert zien!-->\\n      <div *ngIf=\\\"!model.description\\\" class=\\\"col-auto\\\">\\n          <div class=\\\"alert alert-danger\\\">Required input!</div>\\n      </div>\\n\\n    <div class=\\\"col-auto\\\">\\n      <input \\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        placeholder=\\\"Responsible\\\"\\n        id=\\\"responsible\\\"\\n        [(ngModel)]=\\\"model.responsible\\\"\\n        name=\\\"responsible\\\"\\n        #responsible=\\\"ngModel\\\">\\n    </div>\\n\\n        <!--Als responsible niet is ingevult laat alert zien!-->\\n        <div *ngIf=\\\"!model.responsible\\\" class=\\\"col-auto\\\">\\n            <div class=\\\"alert alert-danger\\\">Required input!</div>\\n        </div>\\n\\n    <div class=\\\"col-auto\\\">\\n      <select \\n        class=\\\"form-control\\\"\\n        id=\\\"priority\\\"\\n        [(ngModel)]=\\\"model.priority\\\"\\n        name=\\\"priority\\\"\\n        #priority=\\\"ngModel\\\">\\n        <option value=\\\"low\\\">Low</option>\\n        <option value=\\\"medium\\\">Medium</option>\\n        <option value=\\\"high\\\">High</option>\\n      </select>\\n    </div>\\n\\n    <!-- Als niet alle velden zijn ingevult-->\\n    <div *ngIf =\\\"!model.description || !model.priority || !model.responsible\\\" class=\\\"col-auto\\\">\\n      <!--Disable btn-->\\n        <button type=\\\"submit\\\" class=\\\"btn btn-grey\\\" disabled>Set Task</button>\\n      </div>\\n    <!-- Als alle velden zijn ingevult-->\\n    <div *ngIf =\\\"model.description && model.priority && model.responsible\\\" class=\\\"col-auto\\\">\\n      <!--Enable button-->\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Set Task</button>\\n    </div>\\n\\n\\n  </div>\\n</form>\\n<br />\\n<h3>Todos List:</h3>\\n<!--Als er een input is laat dan de list zien-->\\n<div *ngIf=\\\"(todos | async).length!=0\\\">\\n<table class=\\\"table\\\">\\n  <!--Table head-->\\n  <thead class=\\\"thead-inverse\\\">\\n    <tr>\\n      <th>#</th>\\n      <th>Todo Description</th>\\n      <th>Responsible</th>\\n      <th>Priority</th>\\n      <!--TH voor de delete button-->\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <!--Gaat door array heen en zet steeds een tablerow toe bij elk individueel item-->\\n    <tr *ngFor=\\\"let t of todos | async\\\">\\n      <td><span (click)=\\\"toggleTodo(t)\\\" [class.completed]=\\\"t.isCompleted\\\">{{ t.id }}</span></td>\\n      <td><span (click)=\\\"toggleTodo(t)\\\" [class.completed]=\\\"t.isCompleted\\\">{{ t.description }}</span></td>\\n      <td><span (click)=\\\"toggleTodo(t)\\\" [class.completed]=\\\"t.isCompleted\\\">{{ t.responsible }}</span></td>\\n      <td>\\n        <!--Als priority low/medium/high is verrander dan naar juiste span-->\\n        <span *ngIf=\\\"t.priority == 'low'\\\" class=\\\"badge badge-success\\\">Low</span>\\n        <span *ngIf=\\\"t.priority == 'medium'\\\" class=\\\"badge badge-warning\\\">Medium</span>\\n        <span *ngIf=\\\"t.priority == 'high'\\\" class=\\\"badge badge-danger\\\">High</span>\\n      </td>\\n      <td><button class=\\\"btn btn-danger\\\" (click)=\\\"removeTodo(t)\\\">Delete</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgRedux, select } from '@angular-redux/store';\nimport { IAppState } from '../store';\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from '../actions';\nimport { ITodo } from '../todo';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n  @select() todos;\n\n  model: ITodo = {\n    id: 0,\n    description: \"\",\n    responsible: \"\",\n    priority: \"low\",\n    isCompleted: false \n  };\n\n  constructor(private ngRedux: NgRedux<IAppState>) { }\n\n  ngOnInit() {\n  }\n  //Nieuw item\n  obSubmit() {\n    this.ngRedux.dispatch({type: ADD_TODO, todo: this.model});\n  }\n  //Event handeler\n  toggleTodo(todo) {\n    this.ngRedux.dispatch({ type: TOGGLE_TODO, id: todo.id });\n  }\n\n  //Verwijder item\n  removeTodo(todo) {\n    this.ngRedux.dispatch({type: REMOVE_TODO, id: todo.id });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}